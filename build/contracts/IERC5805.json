{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "VotesExpiredSignature",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotes",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLOCK_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clock",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol",
    "5": "node_modules/@openzeppelin/contracts/interfaces/IERC5805.sol",
    "6": "node_modules/@openzeppelin/contracts/interfaces/IERC6372.sol"
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC5805.sol",
    "exportedSymbols": {
      "IERC5805": [
        4867
      ],
      "IERC6372": [
        9054
      ],
      "IVotes": [
        9039
      ]
    },
    "id": 4868,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4858,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:24:5"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol",
        "file": "../governance/utils/IVotes.sol",
        "id": 4860,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4868,
        "sourceUnit": 9040,
        "src": "133:54:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4859,
              "name": "IVotes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9039,
              "src": "141:6:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC6372.sol",
        "file": "./IERC6372.sol",
        "id": 4862,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4868,
        "sourceUnit": 9055,
        "src": "188:40:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4861,
              "name": "IERC6372",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9054,
              "src": "196:8:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4863,
              "name": "IERC6372",
              "nameLocations": [
                "252:8:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9054,
              "src": "252:8:5"
            },
            "id": 4864,
            "nodeType": "InheritanceSpecifier",
            "src": "252:8:5"
          },
          {
            "baseName": {
              "id": 4865,
              "name": "IVotes",
              "nameLocations": [
                "262:6:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9039,
              "src": "262:6:5"
            },
            "id": 4866,
            "nodeType": "InheritanceSpecifier",
            "src": "262:6:5"
          }
        ],
        "canonicalName": "IERC5805",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 4867,
        "linearizedBaseContracts": [
          4867,
          9039,
          9054
        ],
        "name": "IERC5805",
        "nameLocation": "240:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4868,
        "src": "230:41:5",
        "usedErrors": [
          8964
        ],
        "usedEvents": [
          8973,
          8982
        ]
      }
    ],
    "src": "107:165:5"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.28+commit.7893614a"
  },
  "contractName": "IERC5805",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "IERC6372",
    "IVotes"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "VotesExpiredSignature(uint256)": [
        {
          "details": "The signature used has expired."
        }
      ]
    },
    "events": {
      "DelegateChanged(address,address,address)": {
        "details": "Emitted when an account changes their delegate."
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "details": "Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."
      }
    },
    "kind": "dev",
    "methods": {
      "CLOCK_MODE()": {
        "details": "Description of the clock"
      },
      "clock()": {
        "details": "Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."
      },
      "delegate(address)": {
        "details": "Delegates votes from the sender to `delegatee`."
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Delegates votes from signer to `delegatee`."
      },
      "delegates(address)": {
        "details": "Returns the delegate that `account` has chosen."
      },
      "getPastTotalSupply(uint256)": {
        "details": "Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote."
      },
      "getPastVotes(address,uint256)": {
        "details": "Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block."
      },
      "getVotes(address)": {
        "details": "Returns the current amount of votes that `account` has."
      }
    },
    "version": 1
  },
  "offset": [
    230,
    271
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "f695df66da074ab6d9842579659db34188ae06db",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n",
  "sourceMap": "",
  "sourcePath": "node_modules/@openzeppelin/contracts/interfaces/IERC5805.sol",
  "type": "interface"
}